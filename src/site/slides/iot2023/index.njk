---
layout: layouts/presentation.njk
title: "SemBeacon: A Semantic Proximity Beacon Solution for Discovering and Detecting the Position of Physical Things"
presentation_title: "SemBeacon: A Semantic Proximity Beacon Solution for Discovering and Detecting the Position of Physical Things"
author: <u>Maxim Van de Wynckel</u>, Beat Signer
affiliation: Web & Information Systems Engineering Lab</br>Vrije Universiteit Brussel
logo: true
width: 1280
height: 720
---
{% decktape title, page %}

<!--
    Hello, my name is Maxim Van de Wynckel. I am a PhD candidate at the Web and Information Systems
    engineering lab at the Vrije Universiteit Brussel. Today I will be presenting our paper,
    'SemBeacon: A semantic proximity beacon solution for discovering and detecting the position of physical things'
-->

<section data-markdown>
    {% markdown %}
        ## Overview
        *"A Physical Thing is an abstraction of a **physical** entity that provides **interactions** to and participates in the Web of Things"* \
        <small>- W3C Web of Things (WoT) Thing Description 1.1</small>
        ![](./images/layers.svg){ width=80% }
    {% endmarkdown %}
    <aside class="notes">
         To give a brief overview of where we situate physical things within the domain of internet of things. The world wide
         web concortium describes a physical 'Thing' as an abstraction of a phsyical entity that provides interactions "to"
         and participates "in" the web of things. The web of things as a layer itself is situated on top of the internet of things
         and primarily communicates over HTTP.
    </aside>
</section>

<section data-markdown>
    {% markdown %}
        ## Problem Statement
        *"How to discover and track Physical Things indoors?"*
    {% endmarkdown %}
    <aside class="notes">
        When we strictly talk about physical things that we can interact with, we have one main problem. Mainly,
        that we should somehow discover these physical devices and track their location so we can also
        physically interact with them when needed. Discovering a physical device is more than simply knowing
        that it exist.

        If we look at existing solutions to this problem in the scope of the Web of Things we often found solutions
        that rely on a predefined method of centralisation such as a web service or knowledge database. But even then,
        tracking its location within an complex environment such as indoors is not fully discussed.
    </aside>
</section>

<section data-markdown>
    {% markdown %}
        ## Table of Contents
        1.  Related Work and Specifications
        2.  SemBeacon Solution
        3.  Demonstrator and Supplemental Material
        4.  Conclusions and Future Work
    {% endmarkdown %}
    <aside class="notes">
        For our presentation we will first discuss the related work and Specifications
        that insipired our SemBeacon solution. Next we will introduce our solution followed by
        the demonstrator we have used within the paper and an overview of the supplemental materials
        along its relevancy for future work.
    </aside>
</section>

<section data-markdown>
    {% markdown %}
        ## Related Work

    {% endmarkdown %}
    <aside class="notes">

    </aside>
</section>

<section data-markdown>
    {% markdown %}
        ## BLE Specifications
        ![](images/bluetooth_ips.svg){ width=100% }
        ![](images/uribeacon.svg){ width=100% }
    {% endmarkdown %}
    <aside class="notes">
        If we focus on Bluetooth low energy specification that are specifically focused on indoor positioning, the Bluetooth
        Special interest group has created its own specification for broadcasting a position. It supports both the 
        global WGS84 latitude and longitude along with a local coordinate, transmission power and additional flags of
        data that is available after performing a connection to the bluetooth device.
    </aside>
</section>

<section data-markdown>
    {% markdown %}
        ## BLE Specifications ...
        ![](images/ibeacon.svg){ width=100% }
        ![](images/altbeacon.svg){ width=100% }
    {% endmarkdown %}
</section>

<section data-markdown>
    {% markdown %}
        ## BLE Specifications ...
        ![](images/eddystone.svg){ width=100% }
    {% endmarkdown %}
</section>

<section data-markdown>
    {% markdown %}
        ## SemBeacon Solution
    {% endmarkdown %}
    <aside class="notes">
        The basic principle of our semantic beacon solution called SemBeacon is a Bluetooth Low Energy beacon that
        advertises two identifiers and a set of flags. Compatible applications can retrieve an additional
        URI that redirects to semantic linked data on the Web containing more information about the beacon, its position and environment.

        Our solution and contribution includes both the bluetooth adveritsement protocol, the semantic description and vocabulary and
        how the semantic data, identifiers and flags contribute to the usability of the SemBeacons for indoor positioning, device discovery
        and eventually the interaction with the device.
    </aside>
</section>

<section data-markdown>
    {% markdown %}
        ## SemBeacon Solution ...
        ### BLE 4.X
        ![SemBeacon specification for BLE v4.x](./images/specification_BLE4.svg){ width=80% }
    {% endmarkdown %}
    <aside class="notes">
        Our main solution in general consists of an AltBeacon advertisement with a namespace and instance identifier
        as its beacon identifier, a set of flags which we will discuss in a moment and an Eddystone-URL compatible scan response.
        It is the combination of the advertisement data along with the eddystone-url scan response that makes up SemBeacon.
    </aside>
</section>

<section data-markdown>
    {% markdown %}
        ## SemBeacon Solution ...
        ### Flags
        | **Bit (MSB)** | **Description** | **Example** |
        |---|---|---|
        | 0 | Indicates if the beacon has a position. | 0 = Unsure, 1 = Yes |
        | 1 | Indicates if the beacon is private. | 0 = Public, 1 = Private |
        | 2 | Indicates if the beacon is attached to a moving object. | 0 = No, 1 = Yes |
        | 3 | Indicates if the beacon has a positioning system. | 0 = No, 1 = Yes |
        | 4 | Indicates if the beacon has telemetry data. | 0 = No, 1 = Yes |
        | 5 - 7 | *Reserved for future use.* ||
    {% endmarkdown %}
    <aside class="notes">
        
    </aside>
</section>

<section data-markdown>
    {% markdown %}
        ## SemBeacon Solution ...
        ### Namespace and Instance Identifier
        ![](images/identifier_example.svg){ width=100% }
    {% endmarkdown %}
    <aside class="notes">
        
    </aside>
</section>

<section data-markdown>
    {% markdown %}
        ## SemBeacon Solution ...
        ### BLE 5.X
        ![SemBeacon specification for BLE v5.x](./images/specification_BLE5.svg){ width=80% }
    {% endmarkdown %}
</section>

<section data-markdown>
    {% markdown %}
        ## SemBeacon Solution ...
        ### Ontology and POSO Extension
        
    {% endmarkdown %}
    <aside class="notes">
        In 2022

        Our extension to POSO is 
    </aside>
</section>

<section data-markdown>
    {% markdown %}
        ## Demonstrator
        ![](images/coverage_map.svg)
    {% endmarkdown %}
    <aside class="notes">
        In order to test and demonstrate the capabilities of SemBeacon we tested it in a real world
        scenario. For our test we based ourselves on a previously recorded indoor positioning dataset
        from 2021 that we recorded in the building of our lab. Back then, indoor positioning using the deployed
        beacons required an internal database within the application in order to perform multilateration.

        We first converted the dataset to semantic data using the POSO ontology.
    </aside>
</section>

<section data-markdown>
    {% markdown %}
        ## Example
        ```turtle
        @prefix :          <http://sembeacon.org/example.ttl#> .
        @prefix hardware:  <http://w3id.org/devops-infra/hardware#> .
        @prefix poso:      <http://purl.org/poso/> .
        @prefix posoc:     <http://purl.org/poso/common/> .
        @prefix sembeacon: <http://purl.org/sembeacon/> .
        @prefix qudt:      <http://qudt.org/schema/qudt/> .
        @prefix unit:      <http://qudt.org/vocab/unit/> .

        :building_a a ssn:Deployment ;
            rdfs:label "Building A" ;
            sembeacon:namespaceId "e19c5e1ed6a14d..."^^xsd:hexBinary .

        :room_a1_2 a sembeacon:SemBeacon ;
            rdfs:label "SemBeacon Room A1.2"@en ;
            rdfs:isDefinedBy <http://sembeacon.org/example.ttl#> ;
            sembeacon:namespace :building_a ;
            sembeacon:instanceId "beac0101"^^xsd:hexBinary ;
            hardware:mac "00:11:22:33:44:55" ;
            posoc:referenceRSSI [ # Reference RSSI is a ...
                # ... factory calibrated signal strength
                poso:hasRSS [ 
                    qudt:unit unit:DeciB_M ; qudt:numericValue -56 ] ;
                # ... measured at a specific distance
                poso:hasRelativeDistance [ 
                    unit:Meter ; qudt:value "1.0"^^xsd:double ] .
            ] ;
            poso:hasPosition [ a poso:AbsolutePosition ;
                poso:hasAccuracy [ ... ] ; poso:xAxisValue [ ... ] ;
                poso:yAxisValue [ ... ] ; poso:zAxisValue [ ... ] ] .
        ```
    {% endmarkdown %}
</section>

<section data-markdown>
    {% markdown %}
    ## Conclusions and Future Work
    {% endmarkdown %}
</section>   