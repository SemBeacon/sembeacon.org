[
  {
    "url": "/about/",
    "title": "About",
    "index": "SemBeacon designed by PhD candidate Maxim Van de Wynckel Web Information Systems Engineering (WISE) Lab under supervision Prof Dr Beat Signer semantic beacon specification Bluetooth Low Energy that broadcasts resource URI containing full description beacon its location any other related information built top AltBeacon adds EddystoneURL compatible scan responsethat includes describes beacon details specification check documentationContactAddressVrije Universiteit Brussel DINFMaxim WynckelPleinlaan 2B1050 ElseneBelgiumGeneral: sembeacon@openhpsorgMaxim Wynckel: mvdewync@vub"
  }
  ,
  {
    "url": "/docs/",
    "title": "Specification",
    "index": "Bluetooth AdvertisementSemantic Description"
  }
  ,
  {
    "url": "/docs/logo/",
    "title": "Logo",
    "index": "Style GuidelinesSemBeacon uses logo with color #363795 dark backgrounds displayed white can displayedwith without SemBeacon name However should always include pentagonshaped logoWhenever possible using vector graphics Download *SVG Download *SVGDownload *SVGMeaning represents combination Eddystone (square cut out Epsilon) AltBeacon its hexagon shape Vrije Universiteit Brussel where specification designed"
  }
  ,
  {
    "url": "/docs/vocabulary/",
    "title": "Ontology",
    "index": " vocabulary describing SemBeacon based Positioning System Ontology (POSO) ontology that helps describe positioning system documentation can found here"
  }
  ,
  {
    "url": "/",
    "title": "",
    "index": " semantic Bluetooth Low Energy beacon specification that helps describe itself its deployment positioning system used withinFeaturesInteroperable backwards compatibleRealtime processing systemsExtensible vocabularies use casesExtended advertisement supportGetting Started want create navigation application supports SemBeacon can start by implementing protocol hardware Check out tools page more information"
  }
  ,
  {
    "url": "/tools/",
    "title": "Tools",
    "index": "ESP32 provide library that can used create scan SemBeacon&#39;s with ArduinoESP32 library found this repository// Create SemBeaconBLESemBeacon beacon = BLESemBeacon();beaconsetManufacturerId(0x4c00); // Manufacturer beaconbeaconsetSignalPower(56); RSSI 1m distancebeaconsetNamespaceId(BLEUUID(BEACON_UUID)); Namespace UUIDbeaconsetInstanceId(0xBEACBEAC); Instance IdentifierbeaconsetResourceURI(https://tinyurlcom/3u9tpt7k); URI resource// Start advertisingBLESemBeaconAdvertising* advertising new BLESemBeaconAdvertising();advertisingsetBeacon(beacon);advertisingstart();AndroidSemBeacon provides extension top androidbeaconlibrary by AltBeacon which adds ability SemBeacons broadcast data repositoryBeaconManager beaconManager BeaconManagergetInstanceForApplication(thisgetApplicationContext());// Clear from added parsers prevent having higher prioritybeaconManagergetBeaconParsers()clear();// Detect SemBeaconbeaconManagergetBeaconParsers()add(new SemBeaconParser());// Add againbeaconManagergetBeaconParsers()add(new BeaconParser() setBeaconLayout(BeaconParserALTBEACON_LAYOUT));While tool enables SemBeacons does necesarry tools extracting semantic data public URI example implementation hereiOSCurrently iOS exist demonstrate SemBeacon capabilities"
  }
  ]
